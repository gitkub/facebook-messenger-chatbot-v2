#!/usr/bin/env python3
"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö multi-user context
"""

import os
from dotenv import load_dotenv
from intent_detector import IntentDetector

def test_multiuser_context():
    load_dotenv()

    openai_api_key = os.getenv("OPENAI_API_KEY")
    if not openai_api_key:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö OPENAI_API_KEY")
        return

    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö multi-user context")
    print("=" * 60)

    # ‡∏™‡∏£‡πâ‡∏≤‡∏á detector ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß ‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö‡∏´‡∏•‡∏≤‡∏¢‡∏Ñ‡∏ô
    detector = IntentDetector(openai_api_key)

    # ‡∏à‡∏≥‡∏•‡∏≠‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 2 ‡∏Ñ‡∏ô‡∏Ñ‡∏∏‡∏¢‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô
    print("\nüì± ‡∏™‡∏ñ‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏ì‡πå: ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤ 2 ‡∏Ñ‡∏ô‡∏ó‡∏±‡∏Å‡πÄ‡∏Ç‡πâ‡∏≤‡∏°‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Å‡∏±‡∏ô")
    print("=" * 40)

    # ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 1
    print("\nüë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 1 (user123):")
    user1_messages = [
        "‡∏î‡∏≥ 3 ‡∏ï‡∏±‡∏ß",
        "M",
    ]

    # ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 2
    print("\nüë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 2 (user456):")
    user2_messages = [
        "‡∏Ç‡∏≤‡∏ß 2 ‡∏ï‡∏±‡∏ß",
        "L",
    ]

    # ‡∏™‡∏•‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏Ñ‡∏∏‡∏¢‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 2 ‡∏Ñ‡∏ô
    conversations = [
        ("user123", user1_messages[0]),  # ‡∏î‡∏≥ 3 ‡∏ï‡∏±‡∏ß
        ("user456", user2_messages[0]),  # ‡∏Ç‡∏≤‡∏ß 2 ‡∏ï‡∏±‡∏ß
        ("user123", user1_messages[1]),  # M
        ("user456", user2_messages[1]),  # L
    ]

    results = {}
    for user_id, message in conversations:
        print(f"\n{user_id}: '{message}'")

        try:
            result = detector.process_message(message, user_id=user_id)
            results[f"{user_id}_{len(results)}"] = result

            print(f"   üéØ Intent: {result['used_intent']}")
            print(f"   üìä Confidence: {result['confidence']:.2f}")

            # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
            if result['order_info']:
                order_info = result['order_info']
                if order_info.get('colors'):
                    colors_text = ", ".join([f"{item['color']} {item['quantity']} ‡∏ï‡∏±‡∏ß" for item in order_info['colors']])
                    print(f"   üé® ‡∏™‡∏µ: {colors_text}")
                if order_info.get('size'):
                    print(f"   üìè ‡πÑ‡∏ã‡∏™‡πå: {order_info['size']}")
                if order_info.get('total_quantity'):
                    print(f"   üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {order_info['total_quantity']} ‡∏ï‡∏±‡∏ß")

            print(f"   üí¨ Reply: {result['reply'][:80]}...")

        except Exception as e:
            print(f"   ‚ùå Error: {e}")

        print("-" * 30)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô‡∏°‡∏µ context ‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    print("\nüîç ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å context:")
    print("=" * 40)

    # ‡πÅ‡∏™‡∏î‡∏á context ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏ô
    for user_id in ["user123", "user456"]:
        if user_id in detector.user_contexts:
            context = detector.user_contexts[user_id]
            print(f"\nüë§ {user_id}:")
            print(f"   üìã Order info: {context['order_info']}")
            print(f"   üéØ Last intent: {context['last_intent']}")
            print(f"   üí¨ Last message: {context['last_message']}")
        else:
            print(f"\nüë§ {user_id}: ‚ùå ‡πÑ‡∏°‡πà‡∏°‡∏µ context")

    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô
    print("\n‚úÖ ‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö:")
    print("=" * 40)

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 1 ‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏î‡∏≥ M
    user1_context = detector.user_contexts.get("user123", {})
    user1_order = user1_context.get('order_info', {})
    if (user1_order.get('total_quantity') == 3 and
        user1_order.get('size') == 'M' and
        any(item['color'] == '‡∏î‡∏≥' for item in user1_order.get('colors', []))):
        print("‚úÖ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏™‡∏±‡πà‡∏á‡∏î‡∏≥ 3 ‡∏ï‡∏±‡∏ß ‡πÑ‡∏ã‡∏™‡πå M ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    else:
        print(f"‚ùå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 1: ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - {user1_order}")

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 2 ‡∏°‡∏µ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏Ç‡∏≤‡∏ß L
    user2_context = detector.user_contexts.get("user456", {})
    user2_order = user2_context.get('order_info', {})
    if (user2_order.get('total_quantity') == 2 and
        user2_order.get('size') == 'L' and
        any(item['color'] == '‡∏Ç‡∏≤‡∏ß' for item in user2_order.get('colors', []))):
        print("‚úÖ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏™‡∏±‡πà‡∏á‡∏Ç‡∏≤‡∏ß 2 ‡∏ï‡∏±‡∏ß ‡πÑ‡∏ã‡∏™‡πå L ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")
    else:
        print(f"‚ùå ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡∏Ñ‡∏ô‡∏ó‡∏µ‡πà 2: ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á - {user2_order}")

    print("\nüéØ ‡∏™‡∏£‡∏∏‡∏õ: ‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å context ‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á!" if len(detector.user_contexts) >= 2 else "‚ùå ‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å context ‡πÑ‡∏°‡πà‡∏ó‡∏≥‡∏á‡∏≤‡∏ô")

if __name__ == "__main__":
    test_multiuser_context()