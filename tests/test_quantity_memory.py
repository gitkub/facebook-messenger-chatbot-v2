#!/usr/bin/env python3
"""
‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
"""

import os
from dotenv import load_dotenv
from intent_detector import IntentDetector

def test_quantity_memory():
    load_dotenv()

    openai_api_key = os.getenv("OPENAI_API_KEY")
    if not openai_api_key:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö OPENAI_API_KEY")
        return

    print("üß™ ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ç‡πâ‡∏≤‡∏°‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°")
    print("=" * 60)

    test_cases = [
        {
            'name': '‡πÅ‡∏à‡πâ‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô -> ‡∏ñ‡∏≤‡∏°‡πÑ‡∏ã‡∏™‡πå -> ‡∏ï‡∏≠‡∏ö‡πÑ‡∏ã‡∏™‡πå',
            'conversation': [
                "‡∏î‡∏≥ ‡πÇ‡∏Å‡πÇ‡∏Å‡πâ‡∏∞",  # ‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏µ‡∏´‡∏•‡∏≤‡∏¢‡∏ï‡∏±‡∏ß
                "‡πÑ‡∏î‡∏£‡∏±‡∏ö‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡∏∞",
                "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏à‡πâ‡∏á‡πÑ‡∏ã‡∏™‡πå‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡πâ‡∏ß‡∏¢‡∏Ñ‡∏∞",
                "‡πÄ‡∏≠‡∏≤ 33 ‡πÑ‡∏ã‡∏™‡πå‡πÑ‡∏´‡∏ô‡∏î‡∏µ‡∏Ñ‡∏∞",  # ‡πÅ‡∏à‡πâ‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô 33 ‡πÅ‡∏•‡∏∞‡∏ñ‡∏≤‡∏°‡πÑ‡∏ã‡∏™‡πå
                "L ‡∏Ñ‡∏∞"  # ‡∏ï‡∏≠‡∏ö‡πÑ‡∏ã‡∏™‡πå
            ]
        },
        {
            'name': '‡πÅ‡∏à‡πâ‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡∏µ -> ‡∏ñ‡∏≤‡∏°‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á -> ‡∏ï‡∏≠‡∏ö‡πÑ‡∏ã‡∏™‡πå',
            'conversation': [
                "‡πÄ‡∏≠‡∏≤ 2 ‡∏ï‡∏±‡∏ß",  # ‡πÅ‡∏à‡πâ‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Å‡πà‡∏≠‡∏ô
                "‡∏™‡∏π‡∏á 165 ‡πÉ‡∏™‡πà‡πÑ‡∏ã‡∏™‡πå‡πÑ‡∏´‡∏ô‡∏î‡∏µ‡∏Ñ‡∏∞",  # ‡∏ñ‡∏≤‡∏°‡πÄ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏π‡∏á
                "M"  # ‡∏ï‡∏≠‡∏ö‡πÑ‡∏ã‡∏™‡πå
            ]
        },
        {
            'name': '‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏µ+‡∏à‡∏≥‡∏ô‡∏ß‡∏ô -> ‡∏ñ‡∏≤‡∏°‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏ã‡∏™‡πå -> ‡∏ï‡∏≠‡∏ö‡πÑ‡∏ã‡∏™‡πå',
            'conversation': [
                "‡∏î‡∏≥ 3 ‡∏ï‡∏±‡∏ß",  # ‡πÅ‡∏à‡πâ‡∏á‡∏™‡∏µ+‡∏à‡∏≥‡∏ô‡∏ß‡∏ô
                "‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥‡πÑ‡∏ã‡∏™‡πå‡∏´‡∏ô‡πà‡∏≠‡∏¢",  # ‡∏Ç‡∏≠‡∏Ñ‡∏≥‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥
                "L"  # ‡∏ï‡∏≠‡∏ö‡πÑ‡∏ã‡∏™‡πå
            ]
        }
    ]

    for case in test_cases:
        print(f"\nüìã {case['name']}:")
        print("=" * 40)

        detector = IntentDetector(openai_api_key)

        for i, message in enumerate(case['conversation'], 1):
            print(f"\n{i}. ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: '{message}'")

            try:
                result = detector.process_message(message)
                print(f"   üéØ Intent: {result['used_intent']}")
                print(f"   üìä Confidence: {result['confidence']:.2f}")

                # ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
                if result['order_info']:
                    order_info = result['order_info']
                    if order_info.get('colors'):
                        colors_text = ", ".join([f"{item['color']} {item['quantity']} ‡∏ï‡∏±‡∏ß" for item in order_info['colors']])
                        print(f"   üé® ‡∏™‡∏µ: {colors_text}")
                    if order_info.get('size'):
                        print(f"   üìè ‡πÑ‡∏ã‡∏™‡πå: {order_info['size']}")
                    if order_info.get('total_quantity'):
                        print(f"   üî¢ ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: {order_info['total_quantity']} ‡∏ï‡∏±‡∏ß")

                print(f"\n   üí¨ Reply: {result['reply'][:100]}...")

                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ã‡πâ‡∏≥
                if "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£" in result['reply'] and result['order_info'].get('total_quantity', 0) > 0:
                    print(f"   ‚ùå ‡πÑ‡∏°‡πà‡∏Ñ‡∏ß‡∏£‡∏ñ‡∏≤‡∏°‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ã‡πâ‡∏≥! (‡∏°‡∏µ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô {result['order_info']['total_quantity']} ‡∏ï‡∏±‡∏ß‡πÅ‡∏•‡πâ‡∏ß)")

                # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏ö
                if i == len(case['conversation']) and result['order_info'].get('total_quantity', 0) > 0 and result['order_info'].get('size'):
                    if result['used_intent'] != 'order_confirm':
                        print(f"   ‚ùå ‡∏Ñ‡∏ß‡∏£‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÅ‡∏•‡πâ‡∏ß! (‡∏°‡∏µ‡∏ó‡∏±‡πâ‡∏á‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡πÅ‡∏•‡∏∞‡πÑ‡∏ã‡∏™‡πå)")
                    else:
                        print(f"   ‚úÖ ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á")

            except Exception as e:
                print(f"   ‚ùå Error: {e}")

            print("-" * 30)

        print("=" * 60)

if __name__ == "__main__":
    test_quantity_memory()